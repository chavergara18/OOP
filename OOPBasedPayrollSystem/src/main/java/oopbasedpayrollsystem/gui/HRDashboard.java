/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oopbasedpayrollsystem.gui;

import oopbasedpayrollsystem.model.Employee;
import oopbasedpayrollsystem.gui.EditEmployeeDialog;
import oopbasedpayrollsystem.gui.AddEmployeeDialog;
import database.EmployeeDatabase;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author Administrator
 */
public class HRDashboard extends javax.swing.JFrame {

    DefaultTableModel tableModel;
    List <Employee> employeeList = new ArrayList<>();

    /**
     * Creates new form HRDashboard
     */
    public HRDashboard() {
        initComponents();

        String [] columnNames = {
            "Employee ID", "First Name", "Last Name", "Name", "Position", "Department",
            "Birthday", "Email", "Password", "Date Hired", "Basic Salary", "Allowance",
            "SSS #", "Philhealth #", "Pag-ibig #", "Tin #", "Address",
            "SSS Deduction", "Philhealth Deduction", "Pag-big Deductioon", "BIR Tax"
        };

        tableModel = new DefaultTableModel(columnNames, 0);

        jTable1.setModel(tableModel);

        // Load employees from the database
        refreshEmployeeTable();

        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);
        jTable1.setRowSorter(sorter);

        jTextField1.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                filterTable();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                filterTable();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                filterTable();
            }

            void filterTable() {
                String searchText = jTextField1.getText().toLowerCase();
                if (searchText.trim().isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(javax.swing.RowFilter.regexFilter("(?i)" + searchText));
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        GeneratePayslip = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        GeneratePayslip1 = new javax.swing.JButton();
        GeneratePayslip2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MotorPH");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        GeneratePayslip.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        GeneratePayslip.setText("Add Employee");
        GeneratePayslip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratePayslipActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("LOGOUT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        GeneratePayslip1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        GeneratePayslip1.setText("Edit");
        GeneratePayslip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratePayslip1ActionPerformed(evt);
            }
        });

        GeneratePayslip2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        GeneratePayslip2.setText("Delete");
        GeneratePayslip2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneratePayslip2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 443, Short.MAX_VALUE)
                .addComponent(GeneratePayslip, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GeneratePayslip1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GeneratePayslip2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GeneratePayslip)
                    .addComponent(jButton2)
                    .addComponent(GeneratePayslip1)
                    .addComponent(GeneratePayslip2))
                .addGap(35, 35, 35))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Name", "Position", "Department", "Birthday", "Email", "Password", "Date Hired", "Basic Salary", "Allowance", "SSS #", "Philhealth #", "Pag-ibig #", "Tin #", "Address", "SSS Deduction", "Philhealth Deduction", "Pag-big Deductioon", "BIR Tax"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // This is for add employee
    private void GeneratePayslipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratePayslipActionPerformed

        AddEmployeeDialog addEmployeeDialog = new AddEmployeeDialog(this);
        addEmployeeDialog.setVisible(true);
        if (addEmployeeDialog.isSubmitted) {
            // Assuming you have a method to refresh the employee list in the table
            refreshEmployeeTable();
            JOptionPane.showMessageDialog(this, "Employee added successfully!");
        } 
    }//GEN-LAST:event_GeneratePayslipActionPerformed

    // This is for logout
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "Confirm Logout", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            this.dispose();
            LoginGUI loginScreen = new LoginGUI();
            loginScreen.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // edit employee
    private void GeneratePayslip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratePayslip1ActionPerformed

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an employee to edit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int employeeID = (int) jTable1.getValueAt(selectedRow, 0); // Assuming Employee ID is in the first column
        Employee selectedEmployee = employeeList.stream()
                .filter(emp -> emp.getEmployeeID() == employeeID)
                .findFirst()
                .orElse(null);

        if (selectedEmployee != null) {
            EditEmployeeDialog editEmployeeDialog = new EditEmployeeDialog(this, selectedEmployee);
            editEmployeeDialog.setVisible(true);
            if (editEmployeeDialog.isSubmitted) {
                refreshEmployeeTable(); // Refresh the table after editing
                JOptionPane.showMessageDialog(this, "Employee updated successfully!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selected employee not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_GeneratePayslip1ActionPerformed

    // Delete Employeee
    private void GeneratePayslip2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneratePayslip2ActionPerformed

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an employee to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int employeeID = (int) jTable1.getValueAt(selectedRow, 0); // Assuming Employee ID is in the first column
        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this employee?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            EmployeeDatabase employeeDatabase = new EmployeeDatabase();
            try {
                boolean success = employeeDatabase.deleteEmployee(employeeID);
                if (success) {
                    JOptionPane.showMessageDialog(this, "Employee deleted successfully.");
                    refreshEmployeeTable(); // Refresh the table after deletion
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete employee.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error deleting employee: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_GeneratePayslip2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HRDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HRDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HRDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HRDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HRDashboard().setVisible(true);
            }
        });
    }

    void refreshEmployeeTable() {

        employeeList.clear();
        // Clear the existing table model
        tableModel.setRowCount(0);
        EmployeeDatabase employeeDatabase = new EmployeeDatabase();
        try {
            employeeList = employeeDatabase.getAllEmployeesData();

            // Populate the table model with employee data
            for (Employee employee : employeeList) {
                Object[] rowData = {
                    employee.getEmployeeID(),
                    employee.getFirstName(),
                    employee.getLastName(),
                    employee.getFullName(),
                    employee.getPosition(),
                    employee.getDepartment(),
                    employee.getBirthday(),
                    employee.getEmail(),
                    employee.getPassword(),
                    employee.getDateHired(),
                    employee.getBasicSalary(),
                    employee.getAllowance(),
                    employee.getSssNumber(),
                    employee.getPhilhealthNumber(),
                    employee.getPagibigNumber(),
                    employee.getTinNumber(),
                    employee.getAddress(),
                    employee.getSssDeduction(),
                    employee.getPhilHealthDeduction(),
                    employee.getPagibigDeduction(),
                    employee.getBirTax()
                };
                tableModel.addRow(rowData);
            }


            autoAdjustColumnWidths();

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading employees: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    private void autoAdjustColumnWidths() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); // Disable automatic resizing
        for (int column = 0; column < jTable1.getColumnCount(); column++) {
            int preferredWidth = 0;
            for (int row = 0; row < jTable1.getRowCount(); row++) {
                Object value = jTable1.getValueAt(row, column);
                if (value != null) {
                    int cellWidth = jTable1.getFontMetrics(jTable1.getFont()).stringWidth(value.toString());
                    preferredWidth = Math.max(preferredWidth, cellWidth);
                }
            }
            preferredWidth += 20; // Add padding
            jTable1.getColumnModel().getColumn(column).setPreferredWidth(preferredWidth);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GeneratePayslip;
    private javax.swing.JButton GeneratePayslip1;
    private javax.swing.JButton GeneratePayslip2;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
